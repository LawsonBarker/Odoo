#Zero out Consumables with no BOMs

# Get templates that are BoM headers
bom_header_template_ids = env['mrp.bom'].search([]).mapped('product_tmpl_id.id')

# Get consumable products with stock that do NOT have BoMs defined
products = env['product.product'].search([
    ('type', '=', 'consu'),
    ('qty_available', '!=', 0),
    ('product_tmpl_id', 'not in', bom_header_template_ids)
])

# Get all internal locations
internal_locations = env['stock.location'].search([('usage', '=', 'internal')])

# Loop through and zero each product's quants
for product in products:
    quants = env['stock.quant'].search([
        ('product_id', '=', product.id),
        ('location_id', 'in', internal_locations.ids),
        ('quantity', '!=', 0),
    ])
    for quant in quants:
        quant.write({'quantity': 0})
